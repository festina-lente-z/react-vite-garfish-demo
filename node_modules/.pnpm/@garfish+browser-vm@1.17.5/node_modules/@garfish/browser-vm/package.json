{
  "name": "@garfish/browser-vm",
  "version": "1.17.5",
  "description": "vm-sandbox module.",
  "keywords": [
    "garfish",
    "vm-sandbox"
  ],
  "author": "zhouxiao.shaw <codingzx@gmail.com>",
  "homepage": "https://github.com/bytedance/garfish",
  "license": "MIT",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/bytedance/garfish.git"
  },
  "bugs": {
    "url": "https://github.com/bytedance/garfish/issues"
  },
  "exports": {
    ".": {
      "import": "./dist/esm/index.js",
      "require": "./dist/index.js",
      "types": "./dist/index.d.ts"
    },
    "./*": "./*"
  },
  "main": "dist/index.js",
  "module": "dist/esm/index.js",
  "types": "./dist/index.d.ts",
  "dependencies": {
    "@garfish/loader": "1.17.5",
    "@garfish/core": "1.17.5",
    "@garfish/hooks": "1.17.5",
    "@garfish/utils": "1.17.5"
  },
  "devDependencies": {
    "@garfish/test-suite": "1.17.5"
  },
  "publishConfig": {
    "registry": "https://registry.npmjs.org",
    "access": "public"
  },
  "gitHead": "da33dd16bb9e99588f34079f8b961d0cf9f059fc",
  "scripts": {
    "build": "rimraf dist && tsup src/index.ts --dts",
    "dev": "cross-env WATCH=true tsup src/index.ts"
  },
  "readme": "# `@garfish/browser-vm`\n\n[![NPM version](https://img.shields.io/npm/v/@garfish/browser-vm.svg?style=flat-square)](https://www.npmjs.com/package/@garfish/browser-vm)\n\n## Usage\n\n```js\nimport vmSandbox from '@garfish/browser-vm';\n\nlet nameMap = { a: 'chen' };\n\nconst sandbox = new vmSandbox({\n  namespace: 'app',\n  el: () => document.body,\n  modules: [\n    () => ({\n      override: { nameMap },\n      recover() {\n        nameMap = { a: 'chen' };\n      },\n    }),\n  ],\n});\n\nsandbox.execScript(`\n  window.x = 1;\n  console.log(window.nameMap); // { a: 'chen' }\n  window.nameMap.a = 'tao';\n`);\n\nconsole.log(sandbox.global.x); // 1\nconsole.log(sandbox.global.nameMap); // { a: 'tao' }\n\n// Clear effect\nsandbox.clearEffects();\nconsole.log(nameMap); // { a: 'chen' }\n\n// If clear all effects\nsandbox.reset();\n```\n\n## Hooks\n\n```js\nconst sandbox = new vmSandbox({\n  namespace: 'app',\n  el: () => document.body,\n});\n\nsandbox.hooks.usePlugin({\n  stared(fakeWindow) {},\n  closed() {},\n  beforeClearEffect() {},\n  afterClearEffect() {},\n  beforeInvoke(url, env, options) {},\n  afterInvoke(url, env, options) {},\n  invokeError(err, url, env, options) {},\n  appendNode(parentNode, oldNode, convertedNode, tagName) {},\n});\n```\n"
}